#version 450 core

in vec3 position;
in vec2 textureCoords;
in vec3 normal;

out vec2 fragmentTexture;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec3 toCameraVector;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

void main() {
    vec4 worldPosition = vec4(position, 1.0) * transformationMatrix;
    gl_Position = worldPosition * viewMatrix * projectionMatrix;
    fragmentTexture = textureCoords;

    surfaceNormal = (inverse(transformationMatrix) * vec4(normal,1.0)).xyz;
    toLightVector = lightPosition - worldPosition.xyz;
    toCameraVector = (viewMatrix * vec4(0.0,0.0,0.0,1.0)).xyz - worldPosition.xyz;
}